{"version":3,"sources":["icons/bird.svg","icons/bird-2.svg","icons/chicken.svg","icons/fox.svg","icons/hedgehog.svg","icons/rabbit.svg","icons/squirrel.svg","Home.jsx","SidebarHeader.jsx","Players.jsx","GameActions.jsx","Sidebar.jsx","Table.jsx","Game.jsx","JoinGame.jsx","NewGame.jsx","App.js","serviceWorker.js","index.js","icons/deer-black.svg"],"names":["module","exports","Home","className","src","deer","alt","to","SidebarHeader","icons","bird","birdTwo","chicken","fox","hedgehog","rabbit","squirrel","Players","props","players","map","player","index","id","activePlayerId","key","name","GameActions","onClick","onMovePass","onMoveSave","Sidebar","currentPlayerId","Table","data","issues","cards","filter","issue","type","title","description","metadata","tags","epicId","epic","find","i","bgcolor","color","getTags","lanes","p","card","currentPoints","getData","cardDraggable","isMoveAllowed","hideCardDeleteIcon","handleDragEnd","onCardMove","onCardClick","Modal","setAppElement","defaultPlayerId","v4","Game","gameId","useParams","console","log","useState","process","socketUrl","setIssues","setPlayers","setActivePlayerId","modalIsOpen","setIsOpen","modalIssue","setModalIssue","useLocalStorage","playerId","setPlayerId","playerName","useWebSocket","onOpen","sendJsonMessage","onMessage","event","JSON","parse","payload","updatedIssues","issueId","undefined","shouldReconnect","closeEvent","lastJsonMessage","readyState","cardId","laneId","sourceLaneId","targetLaneId","position","cardDetails","points","parseInt","isOpen","onRequestClose","JoinGame","setPlayerName","onChange","target","value","NewGame","fileName","setFileName","baseUrl","uploadIssues","a","fetch","method","headers","body","accept","fileReader","FileReader","onload","e","result","files","readAsText","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fbf25440.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bird.87ace9d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/bird-2.2a95e580.svg\";","module.exports = __webpack_public_path__ + \"static/media/chicken.c04ddbb9.svg\";","module.exports = __webpack_public_path__ + \"static/media/fox.c66a825a.svg\";","module.exports = __webpack_public_path__ + \"static/media/hedgehog.0b7b275b.svg\";","module.exports = __webpack_public_path__ + \"static/media/rabbit.fd0a14cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/squirrel.57ea8deb.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport deer from './icons/deer-black.svg';\nimport './Home.css';\n\nexport default function Home() {\n\treturn (\n\t\t<div className=\"Home\">\n\t\t\t<img src={deer} alt=\"logo\" />\n\t\t\t<h1>Agilitious</h1>\n\t\t\t<p>An expeditious and nutritious estimation game</p>\n\t\t\t<Link to={`/games/new`}><button>Start a new game</button></Link>\n\t\t</div>\n\t);\n}","import React from 'react';\nimport deer from './icons/deer-black.svg';\nimport './SidebarHeader.css';\n\nexport default function SidebarHeader() {\n\treturn (\n\t\t<div className=\"SidebarHeader\">\n\t\t\t<img src={deer} alt=\"logo\" />\n\t\t\t<h1>Agilitious</h1>\n\t\t</div>\n\t)\n};\n","import React from 'react';\nimport './Players.css';\nimport bird from './icons/bird.svg';\nimport birdTwo from './icons/bird-2.svg';\nimport chicken from './icons/chicken.svg';\nimport fox from './icons/fox.svg';\nimport hedgehog from './icons/hedgehog.svg';\nimport rabbit from './icons/rabbit.svg';\nimport squirrel from './icons/squirrel.svg';\n\nconst icons = [\n\tbird,\n\tbirdTwo,\n\tchicken,\n\tfox,\n\thedgehog,\n\trabbit,\n\tsquirrel\n]\n\nexport default function Players(props) {\n\treturn (\n\t\t<div className=\"Players\">\n\t\t\t<header>Players</header>\n\t\t\t{props.players.map((player, index) => (\n\t\t\t\t<div className={`Player ${player.id === props.activePlayerId ? 'is-active' : ''}`} key={player.id}>\n\t\t\t\t\t<img src={icons[index]} alt=\"avatar\" />\n\t\t\t\t\t<span>{player.name}</span>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t)\n}","import React from 'react';\nimport './GameActions.css';\n\nexport default function GameActions(props) {\n\treturn (\n\t\t<div className=\"GameActions\">\n\t\t\t<button onClick={props.onMovePass}>Looks good</button>\n\t\t\t<button onClick={props.onMoveSave}>Save move</button>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport SidebarHeader from './SidebarHeader';\nimport Players from './Players';\nimport GameActions from './GameActions';\nimport './Sidebar.css';\n\nexport default function Sidebar(props) {\n\treturn (\n\t\t<div className=\"Sidebar\">\n\t\t\t<header className=\"sidebar-header\">\n\t\t\t\t<SidebarHeader />\n\t\t\t</header>\n\t\t\t<div className=\"sidebar-main\">\n\t\t\t\t<Players players={props.players} activePlayerId={props.activePlayerId} />\n\t\t\t</div>\n\t\t\t<footer className=\"sidebar-footer\">\n\t\t\t\t{props.currentPlayerId === props.activePlayerId && <GameActions onMovePass={props.onMovePass} onMoveSave={props.onMoveSave} />}\n\t\t\t</footer>\n\t\t</div>\n\t)\n}\n","import React from 'react';\nimport Board from 'react-trello';\n\nimport './Table.css';\n\nconst getTags = (issue, issues) => {\n\tif (!issue.epicId) {\n\t\treturn [];\n\t}\n\tconst epic = issues.find(i => i.id === issue.epicId);\n\tif (!epic) {\n\t\treturn [];\n\t}\n\treturn [{\n\t\tbgcolor: '#bf263c', // color-red-dark\n\t\tcolor: 'white',\n\t\ttitle: epic.title\n\t}]\n}\n\nconst getData = (issues) => {\n\tconst cards = issues\n\t.filter((issue) => issue.type !== 'Epic')\n\t.map((issue) => {\n\t\tconst { id, title, description, ...rest } = issue;\n\t\tconst tags = getTags(issue, issues);\n\t\treturn {\n\t\t\tid,\n\t\t\tdescription,\n\t\t\tmetadata: rest,\n\t\t\ttags,\n\t\t\ttitle,\n\t\t}\n\t});\n\n\tconst points = [1, 2, 3, 5, 8, 13, 21, 34];\n\tconst lanes = points.map(p => ({\n\t\tid: `${p}`,\n\t\ttitle: p === 1 ? `${p} Point` : `${p} Points`,\n\t\tcards: cards.filter(card => card.metadata.currentPoints === p),\n\t}));\n\n\treturn {\n\t\tlanes,\n\t}\n}\n\nfunction Table(props) {\n\tconst data = getData(props.issues);\n\treturn (\n\t\t<Board\n\t\t\tdata={data}\n\t\t\tcardDraggable={props.isMoveAllowed}\n\t\t\thideCardDeleteIcon={true}\n\t\t\thandleDragEnd={props.onCardMove}\n\t\t\tonCardClick={props.onCardClick} />\n\t);\n}\n\nexport default Table;\n","import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Redirect, useParams } from 'react-router-dom';\nimport useWebSocket from 'react-use-websocket';\nimport Sidebar from './Sidebar';\nimport Table from './Table';\nimport useLocalStorage from 'react-use-localstorage';\nimport { v4 } from 'uuid';\n\nimport './Game.css';\n\nModal.setAppElement('#root');\nconst defaultPlayerId = v4();\n\nexport default function Game() {\n\tconst { gameId } = useParams();\n\tconsole.log(`gameId: ${gameId}`);\n\n\tconst protocol = process.env.NODE_ENV === 'production' ? 'wss' : 'ws';\n\tconst [socketUrl, setSocketUrl] = useState(`${protocol}://${process.env.REACT_APP_BASE_URL}`);\n\tconst [issues, setIssues] = useState([]);\n\tconst [players, setPlayers] = useState([]);\n\tconst [activePlayerId, setActivePlayerId] = useState();\n\n\tconst [modalIsOpen, setIsOpen] = useState(false);\n\tconst [modalIssue, setModalIssue] = useState();\n\n\tconst [playerId, setPlayerId] = useLocalStorage('playerId', defaultPlayerId);\n\tconst [playerName, setPlayerName] = useLocalStorage('playerName', '');\n\n\tconst joinGame = () => {\n\t\tif (playerId) {\n\t\t\tsendJsonMessage({ type: 'JOIN_GAME', gameId, playerId, name: playerName });\n\t\t}\n\t}\n\tconst handleMessage = (event) => {\n\t\tconst { type, ...payload } = JSON.parse(event.data);\n\t\tswitch (type) {\n\t\t\tcase 'GAME_STATE':\n\t\t\t\tsetActivePlayerId(payload.activePlayerId);\n\t\t\t\tsetPlayerId(payload.playerId);\n\t\t\t\tsetPlayers(payload.players);\n\t\t\t\tsetIssues(payload.issues);\n\t\t\t\tbreak;\n\t\t\tcase 'UPDATED_POINTS': {\n\t\t\t\tconst updatedIssues = issues.map(issue =>\n\t\t\t\t\tissue.id === payload.issue.id ? payload.issue : issue\n\t\t\t\t)\n\t\t\t\tsetIssues(updatedIssues);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'ISSUE_OPENED': {\n\t\t\t\tconst issue = issues.find(i => i.id === payload.issueId);\n\t\t\t\tsetIsOpen(true);\n\t\t\t\tsetModalIssue(issue);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'ISSUE_CLOSED': {\n\t\t\t\tsetIsOpen(false);\n\t\t\t\tsetModalIssue(undefined);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'PLAYER_ADDED': {\n\t\t\t\tsetPlayers(payload.players)\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'MOVE_CONFIRMED': {\n\t\t\t\tsetActivePlayerId(payload.activePlayerId);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'PLAYER_SKIPPED': {\n\t\t\t\tsetActivePlayerId(payload.activePlayerId);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t}\n\n\tconst onCardMove = (cardId, sourceLaneId, targetLaneId, position, cardDetails) => {\n\t\tsendJsonMessage({\n\t\t\ttype: 'UPDATE_POINTS',\n\t\t\tplayerId,\n\t\t\tpoints: parseInt(targetLaneId, 10),\n\t\t\tissueId: cardId,\n\t\t\tgameId,\n\t\t})\n\t}\n\n\tconst onCardClick = (cardId, metadata, laneId) => {\n\t\tsendJsonMessage({\n\t\t\ttype: 'OPEN_ISSUE',\n\t\t\tplayerId,\n\t\t\tissueId: cardId,\n\t\t\tgameId,\n\t\t})\n\t}\n\tconst onModalClose = () => {\n\t\tsendJsonMessage({\n\t\t\ttype: 'CLOSE_ISSUE',\n\t\t\tplayerId,\n\t\t\tissueId: modalIssue.id,\n\t\t\tgameId,\n\t\t})\n\t}\n\n\tconst onMoveSave = () => {\n\t\tsendJsonMessage({\n\t\t\ttype: 'CONFIRM_MOVE',\n\t\t\tplayerId,\n\t\t\tgameId,\n\t\t});\n\t}\n\tconst onMovePass = () => {\n\t\tsendJsonMessage({\n\t\t\ttype: 'NO_CHANGE',\n\t\t\tplayerId,\n\t\t\tgameId,\n\t\t})\n\t}\n\tconst {\n\t\tsendJsonMessage,\n\t\tlastJsonMessage,\n\t\treadyState,\n\t} = useWebSocket(socketUrl, {\n\t\tonOpen: joinGame,\n\t\tonMessage: handleMessage,\n\t\tshouldReconnect: (closeEvent) => true,\n\t});\n\n\tif (!playerId || !playerName) {\n\t\treturn <Redirect to={`/games/${gameId}/join`} />;\n\t}\n\n\treturn (\n\t\t<div className=\"Game\">\n\t\t\t<div className=\"game-sidebar\">\n\t\t\t\t<Sidebar\n\t\t\t\t\tactivePlayerId={activePlayerId}\n\t\t\t\t\tcurrentPlayerId={playerId}\n\t\t\t\t\tonMovePass={onMovePass}\n\t\t\t\t\tonMoveSave={onMoveSave}\n\t\t\t\t\tplayers={players} />\n\t\t\t</div>\n\t\t\t<div className=\"game-table\">\n\t\t\t\t<Table\n\t\t\t\t\tisMoveAllowed={playerId === activePlayerId}\n\t\t\t\t\tonCardClick={onCardClick}\n\t\t\t\t\tonCardMove={onCardMove}\n\t\t\t\t\tissues={issues} />\n\t\t\t</div>\n\t\t\t<Modal\n\t\t\t\tisOpen={modalIsOpen}\n\t\t\t\tonRequestClose={onModalClose}>\n\t\t\t\t\t<h1>Hello from modal {modalIssue && modalIssue.title}</h1>\n\t\t\t</Modal>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport useLocalStorage from 'react-use-localstorage';\nimport { v4 } from 'uuid';\nimport './JoinGame.css';\nimport SidebarHeader from './SidebarHeader';\n\nconst defaultPlayerId = v4();\n\nexport default function JoinGame() {\n\tconst { gameId } = useParams();\n\n\tconst [playerName, setPlayerName] = useLocalStorage('playerName', '');\n\tconst [playerId, setPlayerId] = useLocalStorage('playerId', defaultPlayerId);\n\n\tconst handleNameChange = (event) => {\n\t\tconsole.log(`handleChange ${event.target.value}`);\n\t\tsetPlayerName(event.target.value);\n\n\t\tif (!playerId) {\n\t\t\tsetPlayerId(defaultPlayerId);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"JoinGame\">\n\t\t\t<SidebarHeader />\n\t\t\t<form>\n\t\t\t\t<label>Player name</label>\n\t\t\t\t<input onChange={handleNameChange} type=\"text\" value={playerName} />\n\t\t\t</form>\n\t\t\t<Link to={`/games/${gameId}`}><button>Join game</button></Link>\n\t\t</div>\n\t)\n}","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport useLocalStorage from 'react-use-localstorage';\nimport { v4 } from 'uuid';\nimport './NewGame.css';\nimport SidebarHeader from './SidebarHeader';\n\nconst gameId = v4();\nconst defaultPlayerId = v4();\n\nexport default function NewGame() {\n\tconst [playerName, setPlayerName] = useLocalStorage('playerName', '');\n\tconst [playerId, setPlayerId] = useLocalStorage('playerId', defaultPlayerId);\n\tconst [fileName, setFileName] = useState('');\n\n\tconst protocol = process.env.NODE_ENV === 'production' ? 'https' : 'http';\n\tconst baseUrl = `${protocol}://${process.env.REACT_APP_BASE_URL}`;\n\n\tconst handleNameChange = (event) => {\n\t\tsetPlayerName(event.target.value);\n\t}\n\n\tconst uploadIssues = async (data) => {\n\t\tawait fetch(`${baseUrl}/api/games/${gameId}/issues`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'text/plain'\n\t\t\t},\n\t\t\tbody: data\n\t\t});\n\t};\n\n\tconst handleFileUpload = (event) => {\n\t\tconst fileReader = new FileReader();\n\t\tfileReader.onload = (e) => {\n\t\t\tuploadIssues(e.target.result);\n\t\t}\n\t\tsetFileName(event.target.files[0].name);\n\t\tfileReader.readAsText(event.target.files[0])\n\n\t\tif (!playerId) {\n\t\t\tsetPlayerId(defaultPlayerId);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"NewGame\">\n\t\t\t<SidebarHeader />\n\t\t\t<form>\n\t\t\t\t<label>Player name</label>\n\t\t\t\t<input onChange={handleNameChange} type=\"text\" value={playerName} />\n\t\t\t\t<label>Upload Jira issues</label>\n\t\t\t\t<input accept=\".csv\" className=\"custom-file-input\" type=\"file\" onChange={handleFileUpload} />\n\t\t\t\t{fileName && <span className=\"file-upload-name\">{fileName}</span>}\n\t\t\t</form>\n\t\t\t<Link to={`/games/${gameId}`}><button>Start a new game</button></Link>\n\t\t\t<p>Share this game with your teammates:</p>\n\t\t\t<p>{`${baseUrl}/games/${gameId}`}</p>\n\t\t</div>\n\t)\n}\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from './Home';\nimport Game from './Game';\nimport JoinGame from './JoinGame';\nimport NewGame from './NewGame';\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/games/new\">\n\t\t\t\t\t<NewGame />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/games/:gameId/join\">\n\t\t\t\t\t<JoinGame />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/games/:gameId\">\n\t\t\t\t\t<Game />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t<Home />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</BrowserRouter>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/deer-black.6a6cc074.svg\";"],"sourceRoot":""}